@using EduAx.Models.ViewModel
@model IEnumerable<EduAx.Models.ViewModel.Global>

@{
    ViewBag.Title = "Dash";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var oUser = (EduAx.Models.PERSON)HttpContext.Current.Session["user"];
}

<link href="~/Content/Dash_Courses.css" rel="stylesheet" />

<div class="dash-top">
    <img class="img-course" src="~/Img/@Html.DisplayFor(Model => Model.ElementAt(0).image_course)" /> @* IMAGE_COURSE ATRIBUTO BASE DE DATOS [COURSE]*@
    <div class="main-title">
        <div class="icon">
            <i class="@Html.DisplayFor(Model => Model.ElementAt(0).icon_course)"></i>
        </div>
        <h2 class="text">@Html.DisplayFor(Model => Model.ElementAt(0).name_course)</h2>
        <a href="#" class="hero-cta"><i class="uil uil-info-circle"></i></a>
    </div>
    @if (oUser != null)
    {
        <h3 class="course-status">Current status: <span>@Html.DisplayFor(Model => Model.ElementAt(0).state_student)</span></h3>
        <h3 class="course-attempts">Attempts remaining: <span>@(2 - (int)(Model.ElementAt(0).course_count))</span></h3>
        <h3 class="teacher-status">Linked teacher: <span>@Html.DisplayFor(Model => Model.ElementAt(0).name_person)</span></h3>
        <h3 class="group-status">My group: <span>@Html.DisplayFor(Model => Model.ElementAt(0).id_group)</span></h3>
    }
    <div class="desc">
        <p>
            @Html.DisplayFor(Model => Model.ElementAt(0).info_course)
        </p>
    </div>
    <div class="content">
        <div class="box-content">
            <div class="icon">
                <i class="uil uil-user-check"></i>
            </div>
            <div class="box-info">
                <h3>Places</h3>
                <h2>@Html.DisplayFor(Model => Model.ElementAt(0).places_groupcourse)</h2>
            </div>
        </div>
        <div class="box-content">
            <div class="icon">
                <i class="uil uil-users-alt"></i>
            </div>
            <div class="box-info">
                <h3>Groups</h3>
                <h2>@Html.DisplayFor(Model => Model.ElementAt(0).groups_count)</h2>
            </div>
        </div>
    </div>
    <a href="#" class="btn-action"><span>Enroll</span></a>
</div>
<script>
        //guide and constants
        const status = document.querySelector(".course-status span");
        const button = document.querySelector(".dash-top .btn-action span");
        const guide = document.querySelector(".main-content .top-nav .left h2");
        guide.innerHTML = 'You are on > @Html.ActionLink("Home", "Index", "Home") > @Html.ActionLink("Courses", "Index", "Courses") > @Html.ActionLink(Model.ElementAt(0).name_course , "Dash", "Courses", new { id_course = Model.ElementAt(0).id_course}, null)';
</script>
@* CHANGE BUTTON PROPERTIES REGARDING ROLE AND STUDENT IN COURSE STATUS *@
@if (oUser != null)
{
    if (Model.ElementAt(0).state_student.ToLower().Equals("done") ||
        Model.ElementAt(0).state_student.ToLower().Equals("doing"))
    {
        <section class="modal-grades">
            <div class="modal-grades-container">
                <h2 class="modal-grades-title">My grades</h2>
                <hr />
                <img src="~/Img/grades.png" alt="Thumb Grades Image" class="modal-grades-img" />
                <div class="grades">
                    <h2 class="average-grade">Final grade: <span>@((float)((Model.ElementAt(0).stgrade + Model.ElementAt(0).ndgrade + Model.ElementAt(0).rdgrade + Model.ElementAt(0).thgrade) / 4))</span></h2>
                    <p class="grade1">@Html.DisplayFor(Model => Model.ElementAt(0).stgrade)<span>25%</span></p>
                    <p class="grade2">@Html.DisplayFor(Model => Model.ElementAt(0).ndgrade)<span>25%</span></p>
                    <p class="grade3">@Html.DisplayFor(Model => Model.ElementAt(0).rdgrade)<span>25%</span></p>
                    <p class="grade4">@Html.DisplayFor(Model => Model.ElementAt(0).thgrade)<span>25%</span></p>
                </div>
                <a href="" class="modal-grades-close">Close</a>
            </div>
        </section>
    }
    else
    {
        <section class="modal-enroll">
            <div class="modal-enroll-container">
                <h2 class="modal-enroll-title">Enrolling</h2>
                <hr />
                <h2 class="enroll-title">Please select your group</h2>
                <div class="container-enroll">
                    @for (int i = 1; i < Model.Count(); i++)
                    {
                        <a href="/Courses/Enroll?id_course=@Html.DisplayFor(Model => Model.ElementAt(0).id_course)&id_group=@Html.DisplayFor(Model => Model.ElementAt(i).id_group)">
                            Group @Html.DisplayFor(Model => Model.ElementAt(i).id_group)
                            <i class="uil uil-info-circle icon">
                                <span class="tooltip-box">
                                    <span><b>Linked teacher: </b>@Html.DisplayFor(Model => Model.ElementAt(i).name_person)</span>
                                    <span><b>Teacher email: </b> @Html.DisplayFor(Model => Model.ElementAt(i).email)</span>
                                    <span><b>Places course: </b> @Html.DisplayFor(Model => Model.ElementAt(i).places_groupcourse)</span>
                                </span>
                            </i>                           
                        </a>                        
                        if (i + 1 < Model.Count())
                        {
                            <hr />
                        }
                    }
                </div>
                <a href="#" class="modal-enroll-close">Close</a>
            </div>
        </section>
    }

    if (oUser.ROLE_PERSON.ToLower().Equals("student"))
    {
        if (!Model.ElementAt(0).state_student.ToLower().Equals("doing") &&
            Model.ElementAt(0).course_count == 2 ||
            Model.ElementAt(0).state_student.ToLower().Equals("done"))
        {
            <script>
                document.querySelector(".dash-top .btn-action").remove();
            </script>
        }
        switch (Model.ElementAt(0).state_student.ToLower())
        {
            case "to do":
                <style>
                    .course-status span {
                        background: var(--text-color);
                    }
                </style>
                <script>
                    document.querySelector(".hero-cta").remove();
                </script>
                break;
            case "doing":
                <style>
                    .dash-top .btn-action::before {
                        background: #fc6a6a;
                    }

                    .course-status span {
                        background: var(--secondary-color);
                    }

                    .group-status, .teacher-status {
                        display: flex;
                    }
                </style>
                <script>
                    button.innerHTML = "Cancel";
                </script>
                break;
            case "cancelled":
                <style>
                    .course-status span {
                        background: #fc6a6a;
                    }
                </style>
                <script>
                    document.querySelector(".hero-cta").remove();
                </script>
                break;
            case "flunked":
                <style>
                    .course-status span {
                        background-color: red;
                    }
                </style>
                <script>
                    document.querySelector(".hero-cta").remove();
                </script>
                break;
            default:
                <style>
                    .course-status span {
                        background: var(--primary-color);
                    }
                </style>
                <script>
                    document.querySelector(".course-attempts").remove();
                </script>
                break;
        }
    }
}
else
{
    <style>
        .dash-top .btn-action::before {
            background: var(--primary-color);
        }
    </style>
    <script>
        button.innerHTML = "Enroll";
        document.querySelector(".hero-cta").remove();
        document.querySelector(".btn-action").setAttribute('href', '/HOME/LOGIN')
    </script>
}
<!-- Link scrl reveal js-->
<script src="~/Scripts/scrollreveal.js"></script>
<script src="~/Scripts/Dash_Courses.js"></script>

