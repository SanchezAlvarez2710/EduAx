@using EduAx.Models.ViewModel
@model IEnumerable<EduAx.Models.ViewModel.Global>

@{
    ViewBag.Title = "Dash";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var oUser = (EduAx.Models.PERSON)HttpContext.Current.Session["user"];
}

<link href="~/Content/Dash_Courses.css" rel="stylesheet" />
<div class="dash-top">
    <img src="~/Img/@Html.DisplayFor(Model => Model.ElementAt(0).image_course)" /> @* IMAGE_COURSE ATRIBUTO BASE DE DATOS [COURSE]*@
    <div class="main-title">
        <div class="icon">
            <i class="@Html.DisplayFor(Model => Model.ElementAt(0).icon_course)"></i>
        </div>
        <h2 class="text">@Html.DisplayFor(Model => Model.ElementAt(0).name_course)</h2>
    </div>
    @if (oUser != null)
    {
        <h3 class="course-status">Current status: <span>@Html.DisplayFor(Model => Model.ElementAt(0).state_student)</span></h3>
        <h3 class="course-attempts">Attempts remaining: <span>@(2 - (int)(Model.ElementAt(0).course_count))</span></h3>
    }
    <div class="desc">
        <p>
            @Html.DisplayFor(Model => Model.ElementAt(0).info_course)
        </p>
    </div>
    <div class="content">
        <div class="box-content">
            <div class="icon">
                <i class="uil uil-user-check"></i>
            </div>
            <div class="box-info">
                <h3>Places</h3>
                <h2>@Html.DisplayFor(Model => Model.ElementAt(0).places_groupcourse)</h2>
            </div>
        </div>
        <div class="box-content">
            <div class="icon">
                <i class="uil uil-users-alt"></i>
            </div>
            <div class="box-info">
                <h3>Groups</h3>
                <h2>@Html.DisplayFor(Model => Model.ElementAt(0).groups_count)</h2>
            </div>
        </div>
    </div>
    <a href="/"><span>Enroll</span></a>
</div>
<div class="dash-body">
    <div class="grades">

    </div>
    <div class="final-grade">

    </div>
</div>
<script>
    const status = document.querySelector(".course-status span");
  const button = document.querySelector(".dash-top a span");
  const guide = document.querySelector(".main-content .top-nav .left h2");
  guide.innerHTML = 'You are on > @Html.ActionLink("Home", "Index", "Home") > @Html.ActionLink("Courses", "Index", "Courses") > @Html.ActionLink(Model.ElementAt(0).name_course , "Dash", "Courses", new { id_course = Model.ElementAt(0).id_course}, null)';
</script>

@* CHANGE BUTTON PROPERTIES REGARDING ROLE AND STUDENT IN COURSE STATUS *@
@if (oUser != null)
{
    if (oUser.ROLE_PERSON.ToLower().Equals("student"))
    {
        if (Model.ElementAt(0).course_count == 2 || Model.ElementAt(0).state_student.ToLower().Equals("done"))
        {
            <script>
                document.querySelector(".dash-top a").remove();
            </script>
        }
        switch (Model.ElementAt(0).state_student.ToLower())
        {
            case "to do":
                <style>
                    .course-status span {
                        background: var(--text-color);
                    }
                </style>
                break;
            case "doing":
                <style>
                    .dash-top a::before {
                        background: #fc6a6a;
                    }

                    .course-status span {
                        background: var(--secondary-color);
                    }
                </style>
                <script>
                    button.innerHTML = "Cancel";
                </script>
                break;
            case "cancelled":
                <style>
                    .course-status span {
                        background: #fc6a6a;
                    }
                </style>
                break;
            case "flunked":
                <style>
                    .course-status span {
                        background-color: red;
                    }
                </style>
                break;
            default:
                <style>
                    .course-status span {
                        background: var(--primary-color);
                    }
                </style>
                <script>
                    document.querySelector(".course-attempts").remove();
                </script>
                break;
        }
    }
}
else
{
    <style>
        .dash-top a::before {
            background: var(--primary-color);
        }
    </style>
    <script>
        button.innerHTML = "Enroll";
    </script>
}


